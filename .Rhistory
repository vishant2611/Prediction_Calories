geom_histogram(binwidth = 20, color = "black", fill = "skyblue" )  +
labs(title = "Histogram of Residuals", x = "Residuals", y = "Density")
ggplot(data = calorie_df, aes(x = residuals_pred_fat)) +
geom_histogram(binwidth = 20, color = "black", fill = "skyblue",aes(y = ..density..) )  +
labs(title = "Histogram of Residuals", x = "Residuals", y = "Density")
ggplot(data = calorie_df, aes(x = residuals_pred_fat)) +
geom_histogram(binwidth = 20, color = "black", fill = "skyblue", position = 'identity' )  +
labs(title = "Histogram of Residuals", x = "Residuals", y = "Density")
ggplot(data = calorie_df, aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..),binwidth = 20, color = "black", fill = "skyblue", position = 'identity' )  +
labs(title = "Histogram of Residuals", x = "Residuals", y = "Density")
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(binwidth = 20, color = "black", fill = "skyblue" )  +
labs(title = "Histogram of Residuals", x = "Residuals", y="Density")
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..),binwidth = 20,
color = "black", fill = "skyblue" )+
geom_density(color = "#000000", fill = "#F85700", alpha = 0.6)
labs(title = "Histogram of Residuals", x = "Residuals", y="Density")
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..), binwidth = 20,
color = "black", fill = "skyblue" )+
geom_density(color = "#000000", alpha = 0.6)
labs(title = "Histogram of Residuals", x = "Residuals", y="Density")
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..), binwidth = 20,
color = "black", fill = "skyblue" )+
geom_density(color = "red", alpha = 0.6)
labs(title = "Histogram of Residuals", x = "Residuals", y="Density")
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..), binwidth = 20,
color = "black", fill = "skyblue" )+
geom_density(color = "red", alpha = 0.6)+
labs(title = "Histogram of Residuals", x = "Residuals", y="Density")
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..), binwidth = 20,
color = "black", fill = "skyblue" )+
geom_density(color = "red",fill = 'red' alpha = 0.6)+
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..), binwidth = 20,
color = "black", fill = "skyblue" )+
geom_density(color = "red",fill = 'red', alpha = 0.6)+
labs(title = "Histogram of Residuals", x = "Residuals", y="Density")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_hline(yintercept = 500, linetype = "dashed")+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = residuals_pred_fat))+
geom_point()+
geom_smooth(method = 'lm')+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = residuals_pred_fat))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_smooth(method = 'lm')+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_line(color='red')+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_smooth(method = 'lm')+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm')+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm', linetype = 'dashed')+
labs(title = "Residuals vs Fitted Value", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories_pred_fat))+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm', linetype = 'dashed')+
labs(title = "Predicted vs Fitted Value", y="Calories", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm', linetype = 'dashed')+
labs(title = "Predicted vs Fitted Value", y="Calories", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories)+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm', linetype = 'dashed')+
labs(title = "Predicted vs Fitted Value", y="Calories", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm', linetype = 'dashed')+
labs(title = "Predicted vs Fitted Value", y="Calories", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm', linetype = 'dashed')+
labs(title = "Response vs Fitted Value", y="Calories", x="Fitted Values")
mlb11_bats %>%
ggplot(aes(x = at_bats , y = residuals))+
geom_point()+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -200, color = "blue")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -150, color = "blue")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0)+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm', linetype = 'dashed')+
labs(title = "Response vs Fitted Value", y="Calories", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")+
labs(title = "Residuals vs Fitted", y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")+
labs(title = "Residuals vs Fitted", y="Residuals", x="Fitted                  Values")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")+
labs(title = "Residuals vs Fitted", y="Residuals", x="Fitted       Values")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")+
labs(title = "Residuals vs Fitted",
y="Residuals", x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")+
labs(title = "Residuals vs Fitted",
y="Residuals",
x="Fitted Values")
library(tidyverse)
library(here)
setwd("C:\F Drive\BAsic stats DAB 501\project 3")
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
# Replace the _____ with the correct file name
calorie_df <- read.csv(here('Group3.csv'))
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
library(tidyverse)
library(here)
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
setwd("C:/F Drive/BAsic stats DAB 501/project 3")
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
library(tidyverse)
library(here)
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
best_line_general <- function(slope, intercept, predictor,predicted, data, residuals = TRUE) {
mlb <- data %>% mutate(y_predicted = intercept + slope * predictor,
square_residuals = (predicted - y_predicted)^2)
ssr <- mlb %>% summarize(ssr = round(sum(square_residuals), 0))
if (residuals) {
p <- ggplot(mlb, aes(x = predictor, y = predicted)) +
geom_point(shape = 21, fill = 'skyblue', size = 2) +
geom_line(aes(x = predictor, y = y_predicted), colour = 'blue') +
geom_segment(aes(x = predictor, y = predicted,
xend = predictor, yend = y_predicted), linetype = 2) +
ggtitle(paste0("Sum of Squared Resdiduals: ", ssr[[1]]))
} else {
p <- ggplot(mlb, aes(x = predictor, y = predicted)) +
geom_point(shape = 21, fill = 'skyblue', size = 2) +
geom_line(aes(x = predictor, y = y_predicted), colour = 'blue')
}
p
}
cor(calorie_df$fat, calorie_df$calories)
calorie_df %>%
ggplot(aes(x = fat, y = calories))+
geom_point(color = "navy")+
geom_smooth(formula = 'y~x', method = 'lm', se = FALSE)+
labs(title = "Comparison between Fats and Calories",
x = "Fat",
y = "Calories")
lin_fat <- lm(calories ~ fat, data = calorie_df)
summary(lin_fat)
intercept_fat <- 183.734
slope_fat <- 11.267
calorie_df$calories_pred_fat =
slope_fat * calorie_df$fat + intercept_fat
best_line_general(slope_fat, intercept_fat, predictor = calorie_df$fat, predicted = calorie_df$calories, data = calorie_df, residuals = TRUE )
cor(calorie_df$carb, calorie_df$calories)
calorie_df %>%
ggplot(aes(x = carb, y = calories))+
geom_point(color  = "navy")+
geom_smooth(formula = 'y~x', method = 'lm', se = FALSE)+
labs(title = "Comparison between Carbohydrates and Calories",
x = "Carb", y = "Calories")
lin_carb <- lm(calories ~ carb, data = calorie_df)
summary(lin_carb)
intercept_carb <- 146.0204
slope_carb <- 4.2971
calorie_df$calories_pred_carb = slope_carb * calorie_df$carb +                                        intercept_carb
best_line_general(slope_carb, intercept_carb, predictor = calorie_df$carb, predicted = calorie_df$calories, data = calorie_df, residuals = TRUE )
cor(calorie_df$fat, calorie_df$calories) ^ 2
cor(calorie_df$fat, calorie_df$calories) ^ 2
cor(calorie_df$carb, calorie_df$calories) ^ 2
lin_fat <- lm(calories ~ fat, data = calorie_df)
summary(lin_fat)
intercept_fat <- 183.734
slope_fat <- 11.267
calorie_df <- calorie_df %>%
mutate(calories_pred_fat = intercept_fat +
slope_fat * fat,
residuals_pred_fat = calories - calories_pred_fat)
calorie_df %>%
ggplot(aes(x = fat , y = calories))+
geom_point()+
geom_smooth(formula = 'y~x', method = 'lm', linetype = 'dashed')+
labs(title = "Response vs Fitted Value",
y="Calories",
x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = residuals_pred_fat))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
labs(title = "Residuals vs Fitted Value",
y="Residuals",
x="Fitted Values")
calorie_df %>%
ggplot(aes(x = fat , y = residuals_pred_fat))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
labs(title = "Residuals vs Fitted Value",
y="Residuals",
x="Fitted Values")
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..), binwidth = 20,
color = "black", fill = "skyblue" )+
geom_density(color = "red",fill = 'red', alpha = 0.6)+
labs(title = "Histogram of Residuals",
x = "Residuals",
y="Density")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")+
labs(title = "Residuals vs Fitted",
y="Residuals",
x="Fitted Values")
library(tidyverse)
library(here)
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
best_line_general <- function(slope, intercept, predictor,predicted, data, residuals = TRUE) {
mlb <- data %>% mutate(y_predicted = intercept + slope * predictor,
square_residuals = (predicted - y_predicted)^2)
ssr <- mlb %>% summarize(ssr = round(sum(square_residuals), 0))
if (residuals) {
p <- ggplot(mlb, aes(x = predictor, y = predicted)) +
geom_point(shape = 21, fill = 'skyblue', size = 2) +
geom_line(aes(x = predictor, y = y_predicted), colour = 'blue') +
geom_segment(aes(x = predictor, y = predicted,
xend = predictor, yend = y_predicted), linetype = 2) +
ggtitle(paste0("Sum of Squared Resdiduals: ", ssr[[1]]))
} else {
p <- ggplot(mlb, aes(x = predictor, y = predicted)) +
geom_point(shape = 21, fill = 'skyblue', size = 2) +
geom_line(aes(x = predictor, y = y_predicted), colour = 'blue')
}
p
}
cor(calorie_df$fat, calorie_df$calories)
calorie_df %>%
ggplot(aes(x = fat, y = calories))+
geom_point(color = "navy")+
geom_smooth(formula = 'y~x', method = 'lm', se = FALSE)+
labs(title = "Comparison between Fats and Calories",
x = "Fat",
y = "Calories")
lin_fat <- lm(calories ~ fat, data = calorie_df)
summary(lin_fat)
library(tidyverse)
library(here)
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
best_line_general <- function(slope, intercept, predictor,predicted, data, residuals = TRUE) {
mlb <- data %>% mutate(y_predicted = intercept + slope * predictor,
square_residuals = (predicted - y_predicted)^2)
ssr <- mlb %>% summarize(ssr = round(sum(square_residuals), 0))
if (residuals) {
p <- ggplot(mlb, aes(x = predictor, y = predicted)) +
geom_point(shape = 21, fill = 'skyblue', size = 2) +
geom_line(aes(x = predictor, y = y_predicted), colour = 'blue') +
geom_segment(aes(x = predictor, y = predicted,
xend = predictor, yend = y_predicted), linetype = 2) +
ggtitle(paste0("Sum of Squared Resdiduals: ", ssr[[1]]))
} else {
p <- ggplot(mlb, aes(x = predictor, y = predicted)) +
geom_point(shape = 21, fill = 'skyblue', size = 2) +
geom_line(aes(x = predictor, y = y_predicted), colour = 'blue')
}
p
}
cor(calorie_df$fat, calorie_df$calories)
calorie_df %>%
ggplot(aes(x = fat, y = calories))+
geom_point(color = "navy")+
geom_smooth(formula = 'y~x', method = 'lm', se = FALSE)+
labs(title = "Comparison between Fats and Calories",
x = "Fat",
y = "Calories")
lin_fat <- lm(calories ~ fat, data = calorie_df)
summary(lin_fat)
intercept_fat <- 183.734
slope_fat <- 11.267
calorie_df$calories_pred_fat =
slope_fat * calorie_df$fat + intercept_fat
best_line_general(slope_fat, intercept_fat, predictor = calorie_df$fat, predicted = calorie_df$calories, data = calorie_df, residuals = TRUE )
cor(calorie_df$carb, calorie_df$calories)
calorie_df %>%
ggplot(aes(x = carb, y = calories))+
geom_point(color  = "navy")+
geom_smooth(formula = 'y~x', method = 'lm', se = FALSE)+
labs(title = "Comparison between Carbohydrates and Calories",
x = "Carb", y = "Calories")
lin_carb <- lm(calories ~ carb, data = calorie_df)
summary(lin_carb)
intercept_carb <- 146.0204
slope_carb <- 4.2971
calorie_df$calories_pred_carb = slope_carb * calorie_df$carb +                                        intercept_carb
library(tidyverse)
library(here)
setwd("C:\\F Drive\\BAsic stats DAB 501\\project 3")
# Replace the _____ with the correct file name
calorie_df <- read_csv(here('Group3.csv'))
best_line_general <- function(slope, intercept, predictor,predicted, data, residuals = TRUE) {
mlb <- data %>% mutate(y_predicted = intercept + slope * predictor,
square_residuals = (predicted - y_predicted)^2)
ssr <- mlb %>% summarize(ssr = round(sum(square_residuals), 0))
if (residuals) {
p <- ggplot(mlb, aes(x = predictor, y = predicted)) +
geom_point(shape = 21, fill = 'skyblue', size = 2) +
geom_line(aes(x = predictor, y = y_predicted), colour = 'blue') +
geom_segment(aes(x = predictor, y = predicted,
xend = predictor, yend = y_predicted), linetype = 2) +
ggtitle(paste0("Sum of Squared Resdiduals: ", ssr[[1]]))
} else {
p <- ggplot(mlb, aes(x = predictor, y = predicted)) +
geom_point(shape = 21, fill = 'skyblue', size = 2) +
geom_line(aes(x = predictor, y = y_predicted), colour = 'blue')
}
p
}
cor(calorie_df$fat, calorie_df$calories)
calorie_df %>%
ggplot(aes(x = fat, y = calories))+
geom_point(color = "navy")+
geom_smooth(formula = 'y~x', method = 'lm', se = FALSE)+
labs(title = "Comparison between Fats and Calories",
x = "Fat",
y = "Calories")
lin_fat <- lm(calories ~ fat, data = calorie_df)
summary(lin_fat)
lin_fat <- lm(calories ~ fat, data = calorie_df)
summary(lin_fat)
intercept_fat <- 183.734
slope_fat <- 11.267
calorie_df$calories_pred_fat =
slope_fat * calorie_df$fat + intercept_fat
best_line_general(slope_fat, intercept_fat, predictor = calorie_df$fat, predicted = calorie_df$calories, data = calorie_df, residuals = TRUE )
cor(calorie_df$carb, calorie_df$calories)
calorie_df %>%
ggplot(aes(x = carb, y = calories))+
geom_point(color  = "navy")+
geom_smooth(formula = 'y~x', method = 'lm', se = FALSE)+
labs(title = "Comparison between Carbohydrates and Calories",
x = "Carb", y = "Calories")
lin_carb <- lm(calories ~ carb, data = calorie_df)
summary(lin_carb)
intercept_carb <- 146.0204
slope_carb <- 4.2971
calorie_df$calories_pred_carb = slope_carb * calorie_df$carb +                                        intercept_carb
best_line_general(slope_carb, intercept_carb, predictor = calorie_df$carb, predicted = calorie_df$calories, data = calorie_df, residuals = TRUE )
cor(calorie_df$fat, calorie_df$calories) ^ 2
cor(calorie_df$fat, calorie_df$calories) ^ 2
cor(calorie_df$carb, calorie_df$calories) ^ 2
lin_fat <- lm(calories ~ fat, data = calorie_df)
summary(lin_fat)
intercept_fat <- 183.734
slope_fat <- 11.267
calorie_df <- calorie_df %>%
mutate(calories_pred_fat = intercept_fat +
slope_fat * fat,
residuals_pred_fat = calories - calories_pred_fat)
calorie_df %>%
ggplot(aes(x = fat , y = residuals_pred_fat))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
labs(title = "Residuals vs Fitted Value",
y="Residuals",
x="Fitted Values")
calorie_df %>%
ggplot(aes(x = residuals_pred_fat)) +
geom_histogram(aes(y = ..density..), binwidth = 20,
color = "black", fill = "skyblue" )+
geom_density(color = "red",fill = 'red', alpha = 0.6)+
labs(title = "Histogram of Residuals",
x = "Residuals",
y="Density")
calorie_df %>%
ggplot(aes(x = fat, y = residuals_pred_fat ))+
geom_point()+
geom_hline(yintercept = 0, linetype = "dashed")+
geom_hline(yintercept = 100, color = "blue")+
geom_hline(yintercept = -100, color = "blue")+
labs(title = "Residuals vs Fitted",
y="Residuals",
x="Fitted Values")
knit_with_parameters("C:/F Drive/BAsic stats DAB 501/project 3/final_project_template.Rmd")
